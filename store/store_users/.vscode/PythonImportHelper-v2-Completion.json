[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "store_users.asgi",
        "description": "store_users.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "store_users.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-%rgvc6ng-ldtef#pz^#6(bvseqfw$5c9)@sya==j@jqvvnc&3a'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-%rgvc6ng-ldtef#pz^#6(bvseqfw$5c9)@sya==j@jqvvnc&3a'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'users_app',",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'users_app',\n    'rest_framework',\n    'django.contrib.postgres'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'store_users.urls'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "ROOT_URLCONF = 'store_users.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "WSGI_APPLICATION = 'store_users.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': os.environ.get('DB_ENGINE'),\n        'NAME': os.environ.get('DB_NAME'),\n        'USER': os.environ.get('DB_USER'),\n        'PASSWORD': os.environ.get('DB_PASSWORD'),\n        'HOST': os.environ.get('DB_HOST'),",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': os.environ.get('DB_ENGINE'),\n        'NAME': os.environ.get('DB_NAME'),\n        'USER': os.environ.get('DB_USER'),\n        'PASSWORD': os.environ.get('DB_PASSWORD'),\n        'HOST': os.environ.get('DB_HOST'),\n        'PORT': os.environ.get('DB_PORT')\n    },\n}",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "store_users.settings",
        "description": "store_users.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "store_users.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "store_users.urls",
        "description": "store_users.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('users_app.urls'))\n]",
        "detail": "store_users.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "store_users.wsgi",
        "description": "store_users.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "store_users.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users_app.migrations.0001_initial",
        "description": "users_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Country',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "users_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersAppConfig",
        "kind": 6,
        "importPath": "users_app.apps",
        "description": "users_app.apps",
        "peekOfCode": "class UsersAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users_app'",
        "detail": "users_app.apps",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "users_app.models",
        "description": "users_app.models",
        "peekOfCode": "class Customer(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)   \n    password = models.CharField(max_length=128)\n    phone = models.CharField(max_length=100)\n    address = models.TextField()\n    country = models.ForeignKey('Country', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "users_app.models",
        "documentation": {}
    },
    {
        "label": "Country",
        "kind": 6,
        "importPath": "users_app.models",
        "description": "users_app.models",
        "peekOfCode": "class Country(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass Faq(models.Model):\n    question = models.CharField(max_length=100)\n    anwser = models.CharField(max_length=100)\n    def __str__(self):\n        return id",
        "detail": "users_app.models",
        "documentation": {}
    },
    {
        "label": "Faq",
        "kind": 6,
        "importPath": "users_app.models",
        "description": "users_app.models",
        "peekOfCode": "class Faq(models.Model):\n    question = models.CharField(max_length=100)\n    anwser = models.CharField(max_length=100)\n    def __str__(self):\n        return id",
        "detail": "users_app.models",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "kind": 6,
        "importPath": "users_app.serializers",
        "description": "users_app.serializers",
        "peekOfCode": "class CustomerSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Customer\n        fields = '__all__'\nclass CountrySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Country\n        fields = '__all__'\nclass FaqSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "users_app.serializers",
        "documentation": {}
    },
    {
        "label": "CountrySerializer",
        "kind": 6,
        "importPath": "users_app.serializers",
        "description": "users_app.serializers",
        "peekOfCode": "class CountrySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Country\n        fields = '__all__'\nclass FaqSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Faq\n        fields = '__all__'",
        "detail": "users_app.serializers",
        "documentation": {}
    },
    {
        "label": "FaqSerializer",
        "kind": 6,
        "importPath": "users_app.serializers",
        "description": "users_app.serializers",
        "peekOfCode": "class FaqSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Faq\n        fields = '__all__'",
        "detail": "users_app.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "users_app.urls",
        "description": "users_app.urls",
        "peekOfCode": "urlpatterns = [\n    path('customers/', CustomerListCreateView.as_view(), name='customer-list-create'),\n    path('customers/<int:pk>/', CustomerDetailsView.as_view(), name='customer-details'),\n    path('customers/<str:email>/', CustomerRetrieveUpdateDeleteView.as_view(), name='uscustomerer-details-email'),\n    path('countries/', CountryListCreateView.as_view(), name='country-list-create'),\n    path('countries/<int:pk>/', CountryRetrieveUpdateDeleteView.as_view(), name='country-details'),\n]",
        "detail": "users_app.urls",
        "documentation": {}
    },
    {
        "label": "CustomerListCreateView",
        "kind": 6,
        "importPath": "users_app.views",
        "description": "users_app.views",
        "peekOfCode": "class CustomerListCreateView(generics.ListCreateAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\nclass CustomerRetrieveUpdateDeleteView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\n    lookup_field = 'email'\nclass CustomerDetailsView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer",
        "detail": "users_app.views",
        "documentation": {}
    },
    {
        "label": "CustomerRetrieveUpdateDeleteView",
        "kind": 6,
        "importPath": "users_app.views",
        "description": "users_app.views",
        "peekOfCode": "class CustomerRetrieveUpdateDeleteView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\n    lookup_field = 'email'\nclass CustomerDetailsView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\n# COUNTRIES\nclass CountryListCreateView(generics.ListCreateAPIView):\n    queryset = Country.objects.all()",
        "detail": "users_app.views",
        "documentation": {}
    },
    {
        "label": "CustomerDetailsView",
        "kind": 6,
        "importPath": "users_app.views",
        "description": "users_app.views",
        "peekOfCode": "class CustomerDetailsView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\n# COUNTRIES\nclass CountryListCreateView(generics.ListCreateAPIView):\n    queryset = Country.objects.all()\n    serializer_class = CountrySerializer\nclass CountryRetrieveUpdateDeleteView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Country.objects.all()\n    serializer_class = CountrySerializer",
        "detail": "users_app.views",
        "documentation": {}
    },
    {
        "label": "CountryListCreateView",
        "kind": 6,
        "importPath": "users_app.views",
        "description": "users_app.views",
        "peekOfCode": "class CountryListCreateView(generics.ListCreateAPIView):\n    queryset = Country.objects.all()\n    serializer_class = CountrySerializer\nclass CountryRetrieveUpdateDeleteView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Country.objects.all()\n    serializer_class = CountrySerializer",
        "detail": "users_app.views",
        "documentation": {}
    },
    {
        "label": "CountryRetrieveUpdateDeleteView",
        "kind": 6,
        "importPath": "users_app.views",
        "description": "users_app.views",
        "peekOfCode": "class CountryRetrieveUpdateDeleteView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Country.objects.all()\n    serializer_class = CountrySerializer",
        "detail": "users_app.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'store_users.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]